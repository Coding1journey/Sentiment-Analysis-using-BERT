# -*- coding: utf-8 -*-
"""Sentiment Analysis using BERT

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_1-e5RMPpBuKM5tRVPxS2EWwEBCgSvJV
"""
#remove these 2 lines of pip install and install these in environment not inside the code file
!pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu117

!pip install transformers requests beautifulsoup4 pandas numpy

from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
import requests
from bs4 import BeautifulSoup
import re

tokenizer = AutoTokenizer.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

model = AutoModelForSequenceClassification.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

"""Encode and Calculate Sentiment"""

tokens = tokenizer.encode('I hated this, absolutely the worst', return_tensors='pt')

tokens[0]

#just to show how to decode
tokenizer.decode(tokens[0])

result = model(tokens)

result.logits

int(torch.argmax(result.logits))+1

"""Collect Reviews"""

r = requests.get('https://www.yelp.com/biz/mejico-sydney-2')
soup = BeautifulSoup(r.text, 'html.parser')
regex = re.compile('.*comment.*')
results = soup.find_all('p', {'class': regex})
reviews = [result.text for result in results]

"""Load Reviews into DataFrame and Score"""

import pandas as pd
import numpy as np

df = pd.DataFrame(np.array(reviews), columns=['review'])

df.head()

def sentiment_score(review):
  tokens = tokens = tokenizer.encode(review, return_tensors='pt')
  result = model(tokens)
  return int(torch.argmax(result.logits))+1

df['sentiment'] = df['review'].apply(lambda x: sentiment_score(x[:512]))

df
